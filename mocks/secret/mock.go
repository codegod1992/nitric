// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/nitric/pkg/plugins/secret (interfaces: SecretService)

// Package mock_secret is a generated GoMock package.
package mock_secret

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	secret "github.com/nitrictech/nitric/pkg/plugins/secret"
)

// MockSecretService is a mock of SecretService interface.
type MockSecretService struct {
	ctrl     *gomock.Controller
	recorder *MockSecretServiceMockRecorder
}

// MockSecretServiceMockRecorder is the mock recorder for MockSecretService.
type MockSecretServiceMockRecorder struct {
	mock *MockSecretService
}

// NewMockSecretService creates a new mock instance.
func NewMockSecretService(ctrl *gomock.Controller) *MockSecretService {
	mock := &MockSecretService{ctrl: ctrl}
	mock.recorder = &MockSecretServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretService) EXPECT() *MockSecretServiceMockRecorder {
	return m.recorder
}

// Access mocks base method.
func (m *MockSecretService) Access(arg0 *secret.SecretVersion) (*secret.SecretAccessResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Access", arg0)
	ret0, _ := ret[0].(*secret.SecretAccessResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Access indicates an expected call of Access.
func (mr *MockSecretServiceMockRecorder) Access(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Access", reflect.TypeOf((*MockSecretService)(nil).Access), arg0)
}

// Put mocks base method.
func (m *MockSecretService) Put(arg0 *secret.Secret, arg1 []byte) (*secret.SecretPutResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", arg0, arg1)
	ret0, _ := ret[0].(*secret.SecretPutResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Put indicates an expected call of Put.
func (mr *MockSecretServiceMockRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockSecretService)(nil).Put), arg0, arg1)
}
