// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/nitric/pkg/providers/azure/core (interfaces: AzProvider)

// Package mock_core is a generated GoMock package.
package mock_core

import (
	reflect "reflect"

	adal "github.com/Azure/go-autorest/autorest/adal"
	gomock "github.com/golang/mock/gomock"
	core "github.com/nitrictech/nitric/pkg/providers/azure/core"
	common "github.com/nitrictech/nitric/pkg/providers/common"
)

// MockAzProvider is a mock of AzProvider interface.
type MockAzProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAzProviderMockRecorder
}

// MockAzProviderMockRecorder is the mock recorder for MockAzProvider.
type MockAzProviderMockRecorder struct {
	mock *MockAzProvider
}

// NewMockAzProvider creates a new mock instance.
func NewMockAzProvider(ctrl *gomock.Controller) *MockAzProvider {
	mock := &MockAzProvider{ctrl: ctrl}
	mock.recorder = &MockAzProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAzProvider) EXPECT() *MockAzProviderMockRecorder {
	return m.recorder
}

// Details mocks base method.
func (m *MockAzProvider) Details(arg0, arg1 string) (*common.DetailsResponse[interface{}], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Details", arg0, arg1)
	ret0, _ := ret[0].(*common.DetailsResponse[interface{}])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Details indicates an expected call of Details.
func (mr *MockAzProviderMockRecorder) Details(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Details", reflect.TypeOf((*MockAzProvider)(nil).Details), arg0, arg1)
}

// GetResources mocks base method.
func (m *MockAzProvider) GetResources(arg0 string) (map[string]core.AzGenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResources", arg0)
	ret0, _ := ret[0].(map[string]core.AzGenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResources indicates an expected call of GetResources.
func (mr *MockAzProviderMockRecorder) GetResources(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResources", reflect.TypeOf((*MockAzProvider)(nil).GetResources), arg0)
}

// ResourceGroupName mocks base method.
func (m *MockAzProvider) ResourceGroupName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResourceGroupName")
	ret0, _ := ret[0].(string)
	return ret0
}

// ResourceGroupName indicates an expected call of ResourceGroupName.
func (mr *MockAzProviderMockRecorder) ResourceGroupName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResourceGroupName", reflect.TypeOf((*MockAzProvider)(nil).ResourceGroupName))
}

// ServicePrincipalToken mocks base method.
func (m *MockAzProvider) ServicePrincipalToken(arg0 string) (*adal.ServicePrincipalToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServicePrincipalToken", arg0)
	ret0, _ := ret[0].(*adal.ServicePrincipalToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServicePrincipalToken indicates an expected call of ServicePrincipalToken.
func (mr *MockAzProviderMockRecorder) ServicePrincipalToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServicePrincipalToken", reflect.TypeOf((*MockAzProvider)(nil).ServicePrincipalToken), arg0)
}

// SubscriptionId mocks base method.
func (m *MockAzProvider) SubscriptionId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscriptionId")
	ret0, _ := ret[0].(string)
	return ret0
}

// SubscriptionId indicates an expected call of SubscriptionId.
func (mr *MockAzProviderMockRecorder) SubscriptionId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscriptionId", reflect.TypeOf((*MockAzProvider)(nil).SubscriptionId))
}
