// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/nitric/pkg/ifaces/resourcegroupstaggingapiiface (interfaces: ResourceGroupsTaggingAPIAPI)

// Package mock_resourcegroupstaggingapiiface is a generated GoMock package.
package mock_resourcegroupstaggingapiiface

import (
	context "context"
	reflect "reflect"

	resourcegroupstaggingapi "github.com/aws/aws-sdk-go-v2/service/resourcegroupstaggingapi"
	gomock "github.com/golang/mock/gomock"
)

// MockResourceGroupsTaggingAPIAPI is a mock of ResourceGroupsTaggingAPIAPI interface.
type MockResourceGroupsTaggingAPIAPI struct {
	ctrl     *gomock.Controller
	recorder *MockResourceGroupsTaggingAPIAPIMockRecorder
}

// MockResourceGroupsTaggingAPIAPIMockRecorder is the mock recorder for MockResourceGroupsTaggingAPIAPI.
type MockResourceGroupsTaggingAPIAPIMockRecorder struct {
	mock *MockResourceGroupsTaggingAPIAPI
}

// NewMockResourceGroupsTaggingAPIAPI creates a new mock instance.
func NewMockResourceGroupsTaggingAPIAPI(ctrl *gomock.Controller) *MockResourceGroupsTaggingAPIAPI {
	mock := &MockResourceGroupsTaggingAPIAPI{ctrl: ctrl}
	mock.recorder = &MockResourceGroupsTaggingAPIAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceGroupsTaggingAPIAPI) EXPECT() *MockResourceGroupsTaggingAPIAPIMockRecorder {
	return m.recorder
}

// GetResources mocks base method.
func (m *MockResourceGroupsTaggingAPIAPI) GetResources(arg0 context.Context, arg1 *resourcegroupstaggingapi.GetResourcesInput, arg2 ...func(*resourcegroupstaggingapi.Options)) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResources", varargs...)
	ret0, _ := ret[0].(*resourcegroupstaggingapi.GetResourcesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResources indicates an expected call of GetResources.
func (mr *MockResourceGroupsTaggingAPIAPIMockRecorder) GetResources(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResources", reflect.TypeOf((*MockResourceGroupsTaggingAPIAPI)(nil).GetResources), varargs...)
}
